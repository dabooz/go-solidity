{"info":{"language":"Solidity","languageVersion":"0.4.7","abiDefinition":[{"inputs":[{"type":"address","name":"_otherParty"},{"type":"bytes32","name":"_agreementID"}],"type":"function","constant":true,"name":"callerIsConsumer","outputs":[{"type":"bool","name":"h"}]},{"inputs":[{"type":"address","name":"_otherParty"},{"type":"bytes32","name":"_agreementID"},{"type":"uint256","name":"_reason_code"}],"type":"function","constant":false,"name":"terminate_agreement","outputs":[{"type":"uint256","name":"ret"}]},{"inputs":[{"type":"address","name":"_otherParty"},{"type":"bytes32","name":"_agreementID"}],"type":"function","constant":true,"name":"get_contract_hash","outputs":[{"type":"bytes32","name":"_con"}]},{"inputs":[{"type":"bytes32","name":"_agreementID"},{"type":"bytes32","name":"_contractHash"},{"type":"bytes","name":"_producerSig"},{"type":"address","name":"_counterParty"}],"type":"function","constant":false,"name":"create_agreement","outputs":[{"type":"uint256","name":"ret"}]},{"inputs":[{"type":"address","name":"_consumer"},{"type":"address","name":"_producer"},{"type":"bytes32","name":"_agreementID"},{"type":"uint256","name":"_reason_code"}],"type":"function","constant":false,"name":"admin_delete_agreement","outputs":[{"type":"uint256","name":"ret"}]},{"inputs":[{"type":"address","name":"_otherParty"},{"type":"bytes32","name":"_agreementID"}],"type":"function","constant":true,"name":"get_producer_signature","outputs":[{"type":"bytes","name":"_sig"}]},{"inputs":[{"type":"address","name":"_otherParty"},{"type":"bytes32","name":"_agreementID"}],"type":"function","constant":true,"name":"callerIsProducer","outputs":[{"type":"bool","name":"h"}]},{"inputs":[],"type":"constructor","constant":false,"name":"","outputs":null},{"inputs":[{"type":"uint256","name":"_event_code"},{"type":"address","name":"_consumer"},{"type":"address","name":"_producer"},{"type":"bytes32","name":"_agreementID"}],"type":"event","constant":false,"name":"CreatedAgreement","outputs":null},{"inputs":[{"type":"uint256","name":"_event_code"},{"type":"address","name":"_consumer"},{"type":"address","name":"_producer"},{"type":"bytes32","name":"_agreementID"},{"type":"bytes32","name":"_contractHash"},{"type":"bytes","name":"_producerSig"}],"type":"event","constant":false,"name":"CreatedDetail","outputs":null},{"inputs":[{"type":"uint256","name":"_event_code"},{"type":"address","name":"_consumer"},{"type":"address","name":"_producer"},{"type":"bytes32","name":"_agreementID"},{"type":"bytes32","name":"_contractHash"},{"type":"bytes","name":"_producerSig"}],"type":"event","constant":false,"name":"CreateFraudAlert","outputs":null},{"inputs":[{"type":"uint256","name":"_event_code"},{"type":"address","name":"_consumer"},{"type":"address","name":"_producer"},{"type":"bytes32","name":"_agreementID"},{"type":"uint256","name":"_reason_code"}],"type":"event","constant":false,"name":"ConsumerTerminated","outputs":null},{"inputs":[{"type":"uint256","name":"_event_code"},{"type":"address","name":"_consumer"},{"type":"address","name":"_producer"},{"type":"bytes32","name":"_agreementID"},{"type":"uint256","name":"_reason_code"}],"type":"event","constant":false,"name":"ProducerTerminated","outputs":null},{"inputs":[{"type":"uint256","name":"_event_code"},{"type":"address","name":"_consumer"},{"type":"address","name":"_producer"},{"type":"bytes32","name":"_agreementID"},{"type":"uint256","name":"_reason_code"}],"type":"event","constant":false,"name":"TerminateFraudAlert","outputs":null},{"inputs":[{"type":"uint256","name":"_event_code"},{"type":"address","name":"_consumer"},{"type":"address","name":"_producer"},{"type":"bytes32","name":"_agreementID"},{"type":"uint256","name":"_reason_code"}],"type":"event","constant":false,"name":"AdminDeleted","outputs":null}],"compilerVersion":"0.4.7","developerDoc":{"methods":{}},"userDoc":{"methods":{}},"source":"contract agreements {address owner;struct finalAgreement {bytes32 contractHash;bytes32 agreementID;bytes   producerSig;}struct agreementInstance {mapping (bytes32 =\u003e finalAgreement) theAgreement;}struct counter_party {mapping (address =\u003e agreementInstance) agreementInstances;}mapping (address =\u003e counter_party) allAgreements;enum event_codes {created,created_detail,create_fraud_alert,consumer_terminated,producer_terminated,terminate_fraud_alert,admin_deleted}event CreatedAgreement(uint    indexed _event_code,address indexed _consumer,address indexed _producer,bytes32 indexed _agreementID) anonymous;event CreatedDetail(uint    indexed _event_code,address indexed _consumer,address indexed _producer,bytes32 indexed _agreementID,bytes32 _contractHash,bytes  _producerSig) anonymous;event CreateFraudAlert(uint    indexed _event_code,address indexed _consumer,address indexed _producer,bytes32 indexed _agreementID,bytes32 _contractHash,bytes  _producerSig) anonymous;event ConsumerTerminated(uint    indexed _event_code,address indexed _consumer,address indexed _producer,bytes32 indexed _agreementID,uint    _reason_code) anonymous;event ProducerTerminated(uint    indexed _event_code,address indexed _consumer,address indexed _producer,bytes32 indexed _agreementID,uint    _reason_code) anonymous;event TerminateFraudAlert(uint    indexed _event_code,address indexed _consumer,address indexed _producer,bytes32 indexed _agreementID,uint    _reason_code) anonymous;event AdminDeleted(uint    indexed _event_code,address indexed _consumer,address indexed _producer,bytes32 indexed _agreementID,uint    _reason_code) anonymous;function create_agreement(bytes32 _agreementID, bytes32 _contractHash, bytes _producerSig, address _counterParty) returns (uint ret) {if (_counterParty == address(0)) {return 2;}if (callerIsConsumer(_counterParty, _agreementID) || callerIsProducer(_counterParty, _agreementID)) {return 3;}if (verifySig(_contractHash, _producerSig, _counterParty) == true) {allAgreements[tx.origin].agreementInstances[_counterParty].theAgreement[_agreementID] = finalAgreement({contractHash: _contractHash,agreementID:  _agreementID,producerSig:  _producerSig});CreatedAgreement(uint(event_codes.created), tx.origin, _counterParty, _agreementID);CreatedDetail(uint(event_codes.created_detail), tx.origin, _counterParty, _agreementID, _contractHash, _producerSig);return 0;} else {CreateFraudAlert(uint(event_codes.create_fraud_alert), tx.origin, _counterParty, _agreementID, _contractHash, _producerSig);return 1;}}function terminate_agreement(address _otherParty, bytes32 _agreementID, uint _reason_code) returns (uint ret) {if (callerIsConsumer(_otherParty, _agreementID)) {delete allAgreements[tx.origin].agreementInstances[_otherParty].theAgreement[_agreementID];ConsumerTerminated(uint(event_codes.consumer_terminated), tx.origin, _otherParty, _agreementID, _reason_code);return 0;} else if (callerIsProducer(_otherParty, _agreementID)) {delete allAgreements[_otherParty].agreementInstances[tx.origin].theAgreement[_agreementID];ProducerTerminated(uint(event_codes.producer_terminated), _otherParty, tx.origin, _agreementID, _reason_code);return 0;}TerminateFraudAlert(uint(event_codes.terminate_fraud_alert), _otherParty, tx.origin, _agreementID, _reason_code);return 1;}function get_contract_hash(address _otherParty, bytes32 _agreementID) constant returns (bytes32 _con) {if (callerIsConsumer(_otherParty, _agreementID)) {return allAgreements[tx.origin].agreementInstances[_otherParty].theAgreement[_agreementID].contractHash;} else if (callerIsProducer(_otherParty, _agreementID)) {return allAgreements[_otherParty].agreementInstances[tx.origin].theAgreement[_agreementID].contractHash;}return \"\";}function get_producer_signature(address _otherParty, bytes32 _agreementID) constant returns (bytes _sig) {if (callerIsConsumer(_otherParty, _agreementID)) {return allAgreements[tx.origin].agreementInstances[_otherParty].theAgreement[_agreementID].producerSig;} else if (callerIsProducer(_otherParty, _agreementID)) {return allAgreements[_otherParty].agreementInstances[tx.origin].theAgreement[_agreementID].producerSig;}return \"\";}function verifySig(bytes32 _contractHash, bytes _producerSig, address _counterParty) constant internal returns (bool ret) {if (_producerSig.length != 65)return false;bytes32 r;bytes32 s;uint8 v;assembly {r := mload(add(_producerSig, 32))s := mload(add(_producerSig, 64))v := and(mload(add(_producerSig, 65)), 255)}if (v \u003c 27)v += 27;if ( _counterParty == ecrecover(sha3(\"\\x19Ethereum Signed Message:\\n32\",_contractHash), v, r, s) ) {return true;} else {return false;}}function callerIsConsumer(address _otherParty, bytes32 _agreementID) constant returns (bool h) {var a = allAgreements[tx.origin].agreementInstances[_otherParty].theAgreement[_agreementID];if (a.producerSig.length != 0) {return true;}return false;}function callerIsProducer(address _otherParty, bytes32 _agreementID) constant returns (bool h) {var a = allAgreements[_otherParty].agreementInstances[tx.origin].theAgreement[_agreementID];if (a.producerSig.length != 0) {return true;}return false;}function admin_delete_agreement(address _consumer, address _producer,  bytes32 _agreementID, uint _reason_code) returns (uint ret) {if (tx.origin == owner) {var a = allAgreements[_consumer].agreementInstances[_producer].theAgreement[_agreementID];if (a.producerSig.length != 0) {delete allAgreements[_consumer].agreementInstances[_producer].theAgreement[_agreementID];AdminDeleted(uint(event_codes.admin_deleted), _consumer, _producer, _agreementID, _reason_code);return 0;} else {return 1;}} else {return 2;}}function agreements() {owner = msg.sender;}}"},"code":"0x606060405234610000575b60008054600160a060020a03191633600160a060020a03161790555b5b610ca8806100366000396000f300606060405236156100675763ffffffff60e060020a60003504166353d8fab5811461006c5780635d7d59fb1461009c57806369e5d4aa146100cd5780639a751f0f146100fb578063a810877d1461016f578063dc43272c146101a6578063f26b8da114610242575b610000565b3461000057610088600160a060020a0360043516602435610272565b604080519115158252519081900360200190f35b34610000576100bb600160a060020a03600435166024356044356102d8565b60408051918252519081900360200190f35b34610000576100bb600160a060020a03600435166024356104b3565b60408051918252519081900360200190f35b3461000057604080516020600460443581810135601f81018490048402850184019095528484526100bb94823594602480359560649492939190920191819084018382808284375094965050509235600160a060020a03169250610547915050565b60408051918252519081900360200190f35b34610000576100bb600160a060020a03600435811690602435166044356064356107fe565b60408051918252519081900360200190f35b34610000576101c2600160a060020a0360043516602435610948565b604080516020808252835181830152835191928392908301918501908083838215610208575b80518252602083111561020857601f1990920191602091820191016101e8565b505050905090810190601f1680156102345780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3461000057610088600160a060020a0360043516602435610b11565b604080519115158252519081900360200190f35b600160a060020a033281166000908152600160208181526040808420948716845293815283832085845290529181206002808201549293919261010092811615929092026000190190911604156102cc57600191506102d1565b600091505b5092915050565b60006102e48484610272565b156103af5732600160a060020a0390811660009081526001602081815260408084209489168452938152838320878452905291812081815580830182905560028082018054848255929490929081161561010002600019011604601f81901061034d575061037f565b601f01602090049060005260206000209081019061037f91905b8082111561037b5760008155600101610367565b5090565b5b5084915050600160a060020a0380861690321660036040805187815290519081900360200190a45060006104ac565b6103b98484610b11565b1561048457600160a060020a038481166000908152600160208181526040808420329095168452938152838320878452905291812081815580830182905560028082018054848255929490929081161561010002600019011604601f8190106104225750610454565b601f01602090049060005260206000209081019061045491905b8082111561037b5760008155600101610367565b5090565b5b5084915050600160a060020a0332811690861660046040805187815290519081900360200190a45060006104ac565b5b82600160a060020a0332811690861660056040805187815290519081900360200190a45060015b9392505050565b60006104bf8383610272565b156104f85750600160a060020a033281166000908152600160209081526040808320938616835292815282822084835290522054610541565b6105028383610b11565b1561053c5750600160a060020a03808316600090815260016020908152604080832032909416835292815282822084835290522054610541565b5b5060005b92915050565b6000600160a060020a0382161515610561575060026107f5565b61056b8286610272565b8061057b575061057b8286610b11565b5b15610589575060036107f5565b610594848484610b78565b1515600114156107535760408051606081018252858152602080820188815282840187815232600160a060020a0390811660009081526001808652878220928a1682529185528681208c82528552958620855181559251838201559051805160028085018054818a529887902097989597909694861615610100026000190190951604601f908101849004850194919391929091019083901061064257805160ff191683800117855561066f565b8280016001018555821561066f579182015b8281111561066f578251825591602001919060010190610654565b5b506106909291505b8082111561037b5760008155600101610367565b5090565b5087925050600160a060020a03808516915032166000604051600090a484600160a060020a0380841690321660016040805189815260208082018381528a519383019390935289518b938b9392909160608401918501908083838215610711575b80518252602083111561071157601f1990920191602091820191016106f1565b505050905090810190601f16801561073d5780820380516001836020036101000a031916815260200191505b50935050505060405180910390a45060006107f5565b84600160a060020a0380841690321660026040805189815260208082018381528a519383019390935289518b938b93929091606084019185019080838382156107b7575b8051825260208311156107b757601f199092019160209182019101610797565b505050905090810190601f1680156107e35780820380516001836020036101000a031916815260200191505b50935050505060405180910390a45060015b5b949350505050565b60008054819032600160a060020a03908116911614156109395750600160a060020a038086166000908152600160208181526040808420948916845293815283832087845290529190206002808201549192610100908316150260001901909116041561092b57600160a060020a038681166000908152600160208181526040808420948a168452938152838320888452905291812081815580830182905560028082018054848255929490929081161561010002600019011604601f8190106108c857506108fa565b601f0160209004906000526020600020908101906108fa91905b8082111561037b5760008155600101610367565b5090565b5b5085915050600160a060020a0380871690881660066040805188815290519081900360200190a46000915061093e565b6001915061093e565b61093e565b600291505b5b50949350505050565b6040805160208101909152600081526109618383610272565b15610a2857600160a060020a0332811660009081526001602081815260408084209488168452938152838320868452815291839020600290810180548551601f610100958316159590950260001901909116929092049283018490048402820184019094528181529291830182828015610a1c5780601f106109f157610100808354040283529160200191610a1c565b820191906000526020600020905b8154815290600101906020018083116109ff57829003601f168201915b50505050509050610541565b610a328383610b11565b15610af957600160a060020a0383811660009081526001602081815260408084203290951684529381528383208684528152918390206002908101805485516000199482161561010002949094011691909104601f810184900484028301840190945283825290929091830182828015610a1c5780601f106109f157610100808354040283529160200191610a1c565b820191906000526020600020905b8154815290600101906020018083116109ff57829003601f168201915b50505050509050610541565b5b506040805160208101909152600081525b92915050565b600160a060020a03808316600090815260016020818152604080842032909516845293815283832085845290529181206002808201549293919261010092811615929092026000190190911604156102cc57600191506102d1565b600091505b5092915050565b600060006000600085516041141515610b945760009350610c71565b50505060208301516040840151604185015160ff16601b811015610bb657601b015b604080517f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152601c8101899052815190819003603c018120600082815260208381018552928401819052835191825260ff85168284015281840187905260608201869052925160019360808084019493601f198401939081900390910191866161da5a03f11561000057505060206040510351600160a060020a031685600160a060020a03161415610c6c5760019350610c71565b600093505b5b50505093925050505600a165627a7a72305820a8adc1dc792d0db7a48c6237e11818a9d1d044b6d30bfac98fdf21eb308727060029"}