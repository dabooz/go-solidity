{"info":{"language":"Solidity","languageVersion":"0.3.5","abiDefinition":[{"inputs":[{"type":"address","name":"_otherParty"},{"type":"bytes32","name":"_agreementID"}],"type":"function","constant":true,"name":"callerIsConsumer","outputs":[{"type":"bool","name":"h"}]},{"inputs":[{"type":"address","name":"_otherParty"},{"type":"bytes32","name":"_agreementID"},{"type":"uint256","name":"_reason_code"}],"type":"function","constant":false,"name":"terminate_agreement","outputs":[{"type":"uint256","name":"ret"}]},{"inputs":[{"type":"address","name":"_otherParty"},{"type":"bytes32","name":"_agreementID"}],"type":"function","constant":true,"name":"get_contract_hash","outputs":[{"type":"bytes32","name":"_con"}]},{"inputs":[{"type":"bytes32","name":"_agreementID"},{"type":"bytes32","name":"_contractHash"},{"type":"bytes","name":"_producerSig"},{"type":"address","name":"_counterParty"}],"type":"function","constant":false,"name":"create_agreement","outputs":[{"type":"uint256","name":"ret"}]},{"inputs":[{"type":"address","name":"_consumer"},{"type":"address","name":"_producer"},{"type":"bytes32","name":"_agreementID"},{"type":"uint256","name":"_reason_code"}],"type":"function","constant":false,"name":"admin_delete_agreement","outputs":[{"type":"uint256","name":"ret"}]},{"inputs":[{"type":"address","name":"_otherParty"},{"type":"bytes32","name":"_agreementID"}],"type":"function","constant":true,"name":"get_producer_signature","outputs":[{"type":"bytes","name":"_sig"}]},{"inputs":[{"type":"address","name":"_otherParty"},{"type":"bytes32","name":"_agreementID"}],"type":"function","constant":true,"name":"callerIsProducer","outputs":[{"type":"bool","name":"h"}]},{"inputs":[],"type":"constructor","constant":false,"name":"","outputs":null},{"inputs":[{"type":"uint256","name":"_event_code"},{"type":"address","name":"_consumer"},{"type":"address","name":"_producer"},{"type":"bytes32","name":"_agreementID"}],"type":"event","constant":false,"name":"CreatedAgreement","outputs":null},{"inputs":[{"type":"uint256","name":"_event_code"},{"type":"address","name":"_consumer"},{"type":"address","name":"_producer"},{"type":"bytes32","name":"_agreementID"},{"type":"bytes32","name":"_contractHash"},{"type":"bytes","name":"_producerSig"}],"type":"event","constant":false,"name":"CreatedDetail","outputs":null},{"inputs":[{"type":"uint256","name":"_event_code"},{"type":"address","name":"_consumer"},{"type":"address","name":"_producer"},{"type":"bytes32","name":"_agreementID"},{"type":"bytes32","name":"_contractHash"},{"type":"bytes","name":"_producerSig"}],"type":"event","constant":false,"name":"CreateFraudAlert","outputs":null},{"inputs":[{"type":"uint256","name":"_event_code"},{"type":"address","name":"_consumer"},{"type":"address","name":"_producer"},{"type":"bytes32","name":"_agreementID"},{"type":"uint256","name":"_reason_code"}],"type":"event","constant":false,"name":"ConsumerTerminated","outputs":null},{"inputs":[{"type":"uint256","name":"_event_code"},{"type":"address","name":"_consumer"},{"type":"address","name":"_producer"},{"type":"bytes32","name":"_agreementID"},{"type":"uint256","name":"_reason_code"}],"type":"event","constant":false,"name":"ProducerTerminated","outputs":null},{"inputs":[{"type":"uint256","name":"_event_code"},{"type":"address","name":"_consumer"},{"type":"address","name":"_producer"},{"type":"bytes32","name":"_agreementID"},{"type":"uint256","name":"_reason_code"}],"type":"event","constant":false,"name":"TerminateFraudAlert","outputs":null},{"inputs":[{"type":"uint256","name":"_event_code"},{"type":"address","name":"_consumer"},{"type":"address","name":"_producer"},{"type":"bytes32","name":"_agreementID"},{"type":"uint256","name":"_reason_code"}],"type":"event","constant":false,"name":"AdminDeleted","outputs":null}],"compilerVersion":"0.3.5","developerDoc":{"methods":{}},"userDoc":{"methods":{}},"source":"contract agreements {address owner;struct finalAgreement {bytes32 contractHash;bytes32 agreementID;bytes   producerSig;}struct agreementInstance {mapping (bytes32 =\u003e finalAgreement) theAgreement;}struct counter_party {mapping (address =\u003e agreementInstance) agreementInstances;}mapping (address =\u003e counter_party) allAgreements;enum event_codes {created,created_detail,create_fraud_alert,consumer_terminated,producer_terminated,terminate_fraud_alert,admin_deleted}event CreatedAgreement(uint    indexed _event_code,address indexed _consumer,address indexed _producer,bytes32 indexed _agreementID) anonymous;event CreatedDetail(uint    indexed _event_code,address indexed _consumer,address indexed _producer,bytes32 indexed _agreementID,bytes32 _contractHash,bytes  _producerSig) anonymous;event CreateFraudAlert(uint    indexed _event_code,address indexed _consumer,address indexed _producer,bytes32 indexed _agreementID,bytes32 _contractHash,bytes  _producerSig) anonymous;event ConsumerTerminated(uint    indexed _event_code,address indexed _consumer,address indexed _producer,bytes32 indexed _agreementID,uint    _reason_code) anonymous;event ProducerTerminated(uint    indexed _event_code,address indexed _consumer,address indexed _producer,bytes32 indexed _agreementID,uint    _reason_code) anonymous;event TerminateFraudAlert(uint    indexed _event_code,address indexed _consumer,address indexed _producer,bytes32 indexed _agreementID,uint    _reason_code) anonymous;event AdminDeleted(uint    indexed _event_code,address indexed _consumer,address indexed _producer,bytes32 indexed _agreementID,uint    _reason_code) anonymous;function create_agreement(bytes32 _agreementID, bytes32 _contractHash, bytes _producerSig, address _counterParty) returns (uint ret) {if (_counterParty == address(0)) {return 2;}if (callerIsConsumer(_counterParty, _agreementID) || callerIsProducer(_counterParty, _agreementID)) {return 3;}if (verifySig(_contractHash, _producerSig, _counterParty) == true) {allAgreements[tx.origin].agreementInstances[_counterParty].theAgreement[_agreementID] = finalAgreement({contractHash: _contractHash,agreementID:  _agreementID,producerSig:  _producerSig});CreatedAgreement(uint(event_codes.created), tx.origin, _counterParty, _agreementID);CreatedDetail(uint(event_codes.created_detail), tx.origin, _counterParty, _agreementID, _contractHash, _producerSig);return 0;} else {CreateFraudAlert(uint(event_codes.create_fraud_alert), tx.origin, _counterParty, _agreementID, _contractHash, _producerSig);return 1;}}function terminate_agreement(address _otherParty, bytes32 _agreementID, uint _reason_code) returns (uint ret) {if (callerIsConsumer(_otherParty, _agreementID)) {delete allAgreements[tx.origin].agreementInstances[_otherParty].theAgreement[_agreementID];ConsumerTerminated(uint(event_codes.consumer_terminated), tx.origin, _otherParty, _agreementID, _reason_code);return 0;} else if (callerIsProducer(_otherParty, _agreementID)) {delete allAgreements[_otherParty].agreementInstances[tx.origin].theAgreement[_agreementID];ProducerTerminated(uint(event_codes.producer_terminated), _otherParty, tx.origin, _agreementID, _reason_code);return 0;}TerminateFraudAlert(uint(event_codes.terminate_fraud_alert), _otherParty, tx.origin, _agreementID, _reason_code);return 1;}function get_contract_hash(address _otherParty, bytes32 _agreementID) constant returns (bytes32 _con) {if (callerIsConsumer(_otherParty, _agreementID)) {return allAgreements[tx.origin].agreementInstances[_otherParty].theAgreement[_agreementID].contractHash;} else if (callerIsProducer(_otherParty, _agreementID)) {return allAgreements[_otherParty].agreementInstances[tx.origin].theAgreement[_agreementID].contractHash;}return \"\";}function get_producer_signature(address _otherParty, bytes32 _agreementID) constant returns (bytes _sig) {if (callerIsConsumer(_otherParty, _agreementID)) {return allAgreements[tx.origin].agreementInstances[_otherParty].theAgreement[_agreementID].producerSig;} else if (callerIsProducer(_otherParty, _agreementID)) {return allAgreements[_otherParty].agreementInstances[tx.origin].theAgreement[_agreementID].producerSig;}return \"\";}function verifySig(bytes32 _contractHash, bytes _producerSig, address _counterParty) constant internal returns (bool ret) {if (_producerSig.length != 65)return false;bytes32 r;bytes32 s;uint8 v;assembly {r := mload(add(_producerSig, 32))s := mload(add(_producerSig, 64))v := and(mload(add(_producerSig, 65)), 255)}if (v \u003c 27)v += 27;if ( _counterParty == ecrecover(_contractHash, v, r, s) ) {return true;} else {return false;}}function callerIsConsumer(address _otherParty, bytes32 _agreementID) constant returns (bool h) {var a = allAgreements[tx.origin].agreementInstances[_otherParty].theAgreement[_agreementID];if (a.producerSig.length != 0) {return true;}return false;}function callerIsProducer(address _otherParty, bytes32 _agreementID) constant returns (bool h) {var a = allAgreements[_otherParty].agreementInstances[tx.origin].theAgreement[_agreementID];if (a.producerSig.length != 0) {return true;}return false;}function admin_delete_agreement(address _consumer, address _producer,  bytes32 _agreementID, uint _reason_code) returns (uint ret) {if (tx.origin == owner) {var a = allAgreements[_consumer].agreementInstances[_producer].theAgreement[_agreementID];if (a.producerSig.length != 0) {delete allAgreements[_consumer].agreementInstances[_producer].theAgreement[_agreementID];AdminDeleted(uint(event_codes.admin_deleted), _consumer, _producer, _agreementID, _reason_code);return 0;} else {return 1;}} else {return 2;}}function agreements() {owner = msg.sender;}}"},"code":"0x606060405260008054600160a060020a03191633179055610ad7806100246000396000f3606060405236156100615760e060020a600035046353d8fab581146100635780635d7d59fb146100c657806369e5d4aa146100de5780639a751f0f146100f3578063a810877d1461015c578063dc43272c146102a2578063f26b8da1146102c4575b005b61032a6004356024355b32600160a060020a03908116600090815260016020818152604080842094871684529381528383208584529052918120600281810154929391929182161561010002600019019091160482146103be57600191506103c3565b61033e60043560243560443560006103ca848461006d565b61033e6004356024356000610598838361006d565b604080516020604435600481810135601f810184900484028501840190955284845261033e94813594602480359593946064949293910191819084018382808284375094965050933593505050506000600160a060020a03821681141561061657506002610895565b61033e600435602435604435606435600080548190600160a060020a0390811632909116141561089d5750600160a060020a03858116825260016020818152604080852093881685529281528284208685529052908220600281810154919282161561010002600019019091160482146108ab576001600050600087600160a060020a03168152602001908152602001600020600050600001600050600086600160a060020a0316815260200190815260200160002060005060000160005060008560001916815260200190815260200160002060006000820160005060009055600182016000506000905560028201600050805460018160011615610100020316600290046000825580601f106108b457505b5050604080518581529051869250600160a060020a0388811692908a169160069181900360200190a4600091506108a2565b6103506004356024356040805160208101909152600081526108d2838361006d565b61032a6004356024355b600160a060020a0382811660009081526001602081815260408084203290951684529381528383208584529052918120600280820154929391926101009281161592909202600019019091160482146103be57600191506103c3565b604080519115158252519081900360200190f35b60408051918252519081900360200190f35b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156103b05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b600091505b5092915050565b156104645732600160a060020a0390811660009081526001602081815260408084209489168452938152838320878452905291812081815580830182905560028181018054848255929490929081161561010002600019011604601f81901061046e57505b5050604080518481529051859250600160a060020a0387811692329091169160039181900360200190a45060005b9392505050565b6104a084846102ce565b601f01602090049060005260206000209081019061042f91905b8082111561049c5760008155600101610488565b5090565b1561053757600160a060020a038481166000908152600160208181526040808420329095168452938152838320878452905291812081815580830182905560028181018054848255929490929081161561010002600019011604601f81901061057057505b505060408051848152905185925032600160a060020a03908116929088169160049181900360200190a450600061045d565b826000191632600160a060020a031685600160a060020a03166005856040518082815260200191505060405180910390a450600161045d565b601f0160209004906000526020600020908101906105059190610488565b5060005b92915050565b156105d2575032600160a060020a039081166000908152600160209081526040808320938616835292815282822084835290522054610592565b6105dc83836102ce565b1561058e5750600160a060020a03828116600090815260016020908152604080832032909416835292815282822084835290522054610592565b610620828661006d565b80610630575061063082866102ce565b1561063d57506003610895565b61065b848484600060006000600085516041141515610a4257610acd565b1515600114156107115760408051606081018252858152602081810188815282840187815232600160a060020a0390811660009081526001808652878220928a1682529185528681208c82528552958620855181559251838201559051805160028481018054818a529887902097989597909694861615610100026000190190951604601f90810184900485019491939192909101908390106107ae57805160ff19168380011785555b506107de929150610488565b846000191682600160a060020a031632600160a060020a0316600287876040518083600019168152602001806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156107985780820380516001836020036101000a031916815260200191505b50935050505060405180910390a4506001610895565b82800160010185558215610705579182015b828111156107055782518260005055916020019190600101906107c0565b5050604051879250600160a060020a0385811692503216906000908190a4846000191682600160a060020a031632600160a060020a0316600187876040518083600019168152602001806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156108835780820380516001836020036101000a031916815260200191505b50935050505060405180910390a45060005b949350505050565b600291505b50949350505050565b600191506108a2565b601f0160209004906000526020600020908101906102709190610488565b1561095f5732600160a060020a03908116600090815260016020818152604080842094881684529381528383208684528152918390206002908101805485519381161561010002600019011691909104601f8101849004840283018401909452838252909290918301828280156109945780601f1061096957610100808354040283529160200191610994565b6109a083836102ce565b820191906000526020600020905b81548152906001019060200180831161097757829003601f168201915b50505050509050610592565b15610a2d57600160a060020a0383811660009081526001602081815260408084203290951684529381528383208684528152918390206002908101805485519381161561010002600019011691909104601f8101849004840283018401909452838252909290918301828280156109945780601f1061096957610100808354040283529160200191610994565b50604080516020810190915260008152610592565b50505060208301516040840151604185015160ff16601b811015610a6457601b015b6040805188815260ff831660208281019190915281830186905260608201859052915160019260808381019391929182900301816000866161da5a03f11561000257505060405151600160a060020a0386811691161415610ac85760019350610acd565b600093505b505050939250505056"}