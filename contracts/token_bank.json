{"info":{"language":"Solidity","languageVersion":"0.3.1","abiDefinition":[{"inputs":[{"type":"address","name":"_addr"}],"type":"function","constant":true,"name":"account_balance_by_addr","outputs":[{"type":"uint256","name":"balance"}]},{"inputs":[{"type":"address","name":"_proposer"},{"type":"address","name":"_cp"},{"type":"address","name":"_contract"}],"type":"function","constant":true,"name":"get_counterparty_accepted","outputs":[{"type":"bool","name":"rv"}]},{"inputs":[{"type":"address","name":"_proposer"},{"type":"address","name":"_cp"},{"type":"address","name":"_contract"}],"type":"function","constant":true,"name":"get_proposer_accepted","outputs":[{"type":"bool","name":"rv"}]},{"inputs":[],"type":"function","constant":true,"name":"loan_balance","outputs":[{"type":"uint256","name":"r"}]},{"inputs":[{"type":"address","name":"_cp"},{"type":"address","name":"_contract"},{"type":"uint256","name":"_amount"}],"type":"function","constant":false,"name":"make_payment","outputs":[{"type":"bool","name":"rv"}]},{"inputs":[],"type":"function","constant":false,"name":"kill","outputs":[]},{"inputs":[{"type":"address","name":"_cp"},{"type":"address","name":"_contract"},{"type":"bool","name":"_vote"}],"type":"function","constant":false,"name":"proposer_vote","outputs":[{"type":"bool","name":"rv"}]},{"inputs":[],"type":"function","constant":true,"name":"get_minter","outputs":[{"type":"address","name":"r"}]},{"inputs":[{"type":"uint256","name":"_amount"}],"type":"function","constant":false,"name":"repay_loan","outputs":[{"type":"bool","name":"r"}]},{"inputs":[{"type":"uint256","name":"_amount"}],"type":"function","constant":false,"name":"increase_loan","outputs":[{"type":"bool","name":"r"}]},{"inputs":[{"type":"address","name":"_addr"}],"type":"function","constant":true,"name":"loan_balance_by_addr","outputs":[{"type":"uint256","name":"balance"}]},{"inputs":[{"type":"uint256","name":"_amount"}],"type":"function","constant":false,"name":"mint","outputs":[]},{"inputs":[{"type":"address","name":"_proposer"},{"type":"address","name":"_cp"},{"type":"address","name":"_contract"}],"type":"function","constant":true,"name":"get_escrow_amount","outputs":[{"type":"uint256","name":"rv"}]},{"inputs":[{"type":"address","name":"_receiver"},{"type":"uint256","name":"_amount"}],"type":"function","constant":false,"name":"transfer","outputs":[{"type":"bool","name":"r"}]},{"inputs":[],"type":"function","constant":true,"name":"get_total_currency","outputs":[{"type":"uint256","name":"r"}]},{"inputs":[{"type":"address","name":"_proposer"},{"type":"address","name":"_contract"},{"type":"bool","name":"_vote"}],"type":"function","constant":false,"name":"counter_party_vote","outputs":[{"type":"bool","name":"rv"}]},{"inputs":[{"type":"uint256","name":"_amount"}],"type":"function","constant":false,"name":"obtain_loan","outputs":[{"type":"bool","name":"r"}]},{"inputs":[],"type":"function","constant":true,"name":"account_balance","outputs":[{"type":"uint256","name":"balance"}]},{"inputs":[{"type":"address","name":"_proposer"},{"type":"address","name":"_cp"},{"type":"address","name":"_contract"}],"type":"function","constant":true,"name":"get_agreement_cancelled","outputs":[{"type":"bool","name":"rv"}]},{"inputs":[{"type":"address","name":"_proposer"},{"type":"address","name":"_cp"},{"type":"address","name":"_contract"},{"type":"uint256","name":"_amount"}],"type":"function","constant":false,"name":"cancel_escrow","outputs":[{"type":"bool","name":"rv"}]},{"inputs":[{"type":"address","name":"_cp"},{"type":"address","name":"_contract"},{"type":"uint256","name":"_amount"}],"type":"function","constant":false,"name":"create_escrow","outputs":[{"type":"bool","name":"rv"}]},{"inputs":[],"type":"constructor","constant":false,"name":"","outputs":null},{"inputs":[{"type":"uint256","name":"_event_code"},{"type":"address","name":"owner"},{"type":"address","name":"_from"},{"type":"uint256","name":"_value"}],"type":"event","constant":false,"name":"Mint","outputs":null},{"inputs":[{"type":"uint256","name":"_event_code"},{"type":"address","name":"_from"},{"type":"uint256","name":"_value"}],"type":"event","constant":false,"name":"ObtainLoan","outputs":null},{"inputs":[{"type":"uint256","name":"_event_code"},{"type":"address","name":"_from"},{"type":"uint256","name":"_value"}],"type":"event","constant":false,"name":"ExtendLoan","outputs":null},{"inputs":[{"type":"uint256","name":"_event_code"},{"type":"address","name":"_from"},{"type":"uint256","name":"_value"}],"type":"event","constant":false,"name":"RepayLoan","outputs":null},{"inputs":[{"type":"uint256","name":"_event_code"},{"type":"address","name":"_from"},{"type":"address","name":"_to"},{"type":"uint256","name":"_value"}],"type":"event","constant":false,"name":"Transfer","outputs":null},{"inputs":[{"type":"uint256","name":"_event_code"},{"type":"address","name":"_from"},{"type":"address","name":"_to"},{"type":"address","name":"_contract"},{"type":"uint256","name":"_amount"}],"type":"event","constant":false,"name":"NewProposal","outputs":null},{"inputs":[{"type":"uint256","name":"_event_code"},{"type":"address","name":"_from"},{"type":"address","name":"_to"},{"type":"address","name":"_contract"}],"type":"event","constant":false,"name":"CancelProposal","outputs":null},{"inputs":[{"type":"uint256","name":"_event_code"},{"type":"address","name":"_from"},{"type":"address","name":"_to"},{"type":"address","name":"_contract"}],"type":"event","constant":false,"name":"CounterpartyAccepted","outputs":null},{"inputs":[{"type":"uint256","name":"_event_code"},{"type":"address","name":"_from"},{"type":"address","name":"_to"},{"type":"address","name":"_contract"}],"type":"event","constant":false,"name":"ProposerVerified","outputs":null},{"inputs":[{"type":"uint256","name":"_event_code"},{"type":"address","name":"_from"},{"type":"address","name":"_to"},{"type":"address","name":"_contract"},{"type":"uint256","name":"_value"}],"type":"event","constant":false,"name":"ProposerPaid","outputs":null},{"inputs":[{"type":"uint256","name":"_event_code"},{"type":"address","name":"_from"},{"type":"address","name":"_to"},{"type":"address","name":"_contract"},{"type":"uint256","name":"_value"}],"type":"event","constant":false,"name":"EscrowRefund","outputs":null}],"compilerVersion":"0.3.1","developerDoc":{"methods":{}},"userDoc":{"methods":{}},"source":"contract authorized_caller {function get_owner() constant returns (address r) {}}contract container_executor {function cancel_container(uint _amount) returns (bool r) {}}contract token_bank {address minter;uint total_currency;mapping (address =\u003e uint) balances;mapping (address =\u003e uint) loans;uint constant loan_limit = 100000000;struct proposal {bool proposer_vote;bool counter_party_vote;bool cancelled;uint amount;}struct shared_contract {mapping (address =\u003e proposal) proposals;}struct counter_party {mapping (address =\u003e shared_contract) counter_parties;}mapping (address =\u003e counter_party) escrow;enum event_codes {mint,loan_created,loan_extended,loan_repaid,transfer,escrow_created,escrow_cancelled,escrow_counterparty_accepted,escrow_proposer_accepted,escrow_proposer_paid,escrow_refunded}event Mint(uint indexed _event_code, address indexed owner, address indexed _from, uint indexed _value) anonymous;event ObtainLoan(uint indexed _event_code, address indexed _from, uint indexed _value) anonymous;event ExtendLoan(uint indexed _event_code, address indexed _from, uint indexed _value) anonymous;event RepayLoan(uint indexed _event_code, address indexed _from, uint indexed _value) anonymous;event Transfer(uint indexed _event_code, address indexed _from, address indexed _to, uint indexed _value) anonymous;event NewProposal(uint indexed _event_code, address indexed _from, address indexed _to, address indexed _contract, uint _amount) anonymous;event CancelProposal(uint indexed _event_code, address indexed _from, address indexed _to, address indexed _contract) anonymous;event CounterpartyAccepted(uint indexed _event_code, address indexed _from, address indexed _to, address indexed _contract) anonymous;event ProposerVerified(uint indexed _event_code, address indexed _from, address indexed _to, address indexed _contract) anonymous;event ProposerPaid(uint indexed _event_code, address indexed _from, address indexed _to, address indexed _contract, uint _value) anonymous;event EscrowRefund(uint indexed _event_code, address indexed _from, address indexed _to, address indexed _contract, uint _value) anonymous;function token_bank() {minter = msg.sender;total_currency = 1000000000000000000000;}function transfer(address _receiver, uint _amount) returns (bool r) {if (balances[tx.origin] \u003c _amount) return false;balances[tx.origin] -= _amount;balances[_receiver] += _amount;Transfer(uint(event_codes.transfer), tx.origin, _receiver, _amount);return true;}function account_balance() constant returns (uint balance) {return balances[tx.origin];}function account_balance_by_addr(address _addr) constant returns (uint balance) {if (tx.origin == minter || tx.origin == _addr) {return balances[_addr];} else {return 0;}}function hasAmount(address _addr, uint _amount) internal constant returns (bool res) {return balances[_addr]\u003e=_amount;}function obtain_loan(uint _amount) returns (bool r) {if (exceeds_loan_limits(_amount)) return false;var existing_loan = loans[tx.origin];if (existing_loan != 0) return false;loans[tx.origin] = _amount;total_currency -= _amount;balances[tx.origin] += _amount;ObtainLoan(uint(event_codes.loan_created), tx.origin, _amount);return true;}function increase_loan(uint _amount) returns (bool r) {if (exceeds_loan_limits(_amount)) return false;var existing_loan = loans[tx.origin];if (existing_loan == 0) return false;loans[tx.origin] += _amount;total_currency -= _amount;balances[tx.origin] += _amount;ExtendLoan(uint(event_codes.loan_extended), tx.origin, _amount);return true;}function repay_loan(uint _amount) returns (bool r) {if (balances[tx.origin] \u003c _amount) return false;total_currency += _amount;loans[tx.origin] -= _amount;balances[tx.origin] -= _amount;RepayLoan(uint(event_codes.loan_repaid), tx.origin, _amount);return true;}function loan_balance() constant returns (uint r) {return loans[tx.origin];}function loan_balance_by_addr(address _addr) constant returns (uint balance) {if (tx.origin == minter || tx.origin == _addr) {return loans[_addr];} else {return 0;}}function exceeds_loan_limits(uint _amount) internal constant returns (bool r) {if (_amount \u003e total_currency || _amount \u003e loan_limit) {return true;}return false;}function create_escrow(address _cp, address _contract, uint _amount) returns (bool rv) {if (_amount \u003e 0 \u0026\u0026 hasAmount(tx.origin,_amount)) {var prop = escrow[tx.origin].counter_parties[_cp].proposals[_contract];if (prop.amount == 0) {escrow[tx.origin].counter_parties[_cp].proposals[_contract] = proposal({proposer_vote:false,counter_party_vote:false,cancelled:false,amount:_amount});balances[tx.origin] -= _amount;NewProposal(uint(event_codes.escrow_created), tx.origin, _cp, _contract, _amount);return true;} else {return false;}} else {return false;}}function counter_party_vote(address _proposer, address _contract, bool _vote) returns (bool rv) {var prop = escrow[_proposer].counter_parties[tx.origin].proposals[_contract];if (prop.amount != 0) {prop.counter_party_vote = _vote;CounterpartyAccepted(uint(event_codes.escrow_counterparty_accepted), _proposer, tx.origin, _contract);return true;} else {return false;}}function proposer_vote(address _cp, address _contract, bool _vote) returns (bool rv) {var prop = escrow[tx.origin].counter_parties[_cp].proposals[_contract];if (prop.amount != 0) {prop.proposer_vote = _vote;ProposerVerified(uint(event_codes.escrow_proposer_accepted), tx.origin, _cp, _contract);return true;} else {return false;}}function make_payment(address _cp, address _contract, uint _amount) returns (bool rv) {var prop = escrow[tx.origin].counter_parties[_cp].proposals[_contract];if (prop.amount != 0 \u0026\u0026 prop.cancelled == false \u0026\u0026 prop.proposer_vote == true \u0026\u0026 prop.counter_party_vote == true) {var pay = _amount;if (_amount \u003e prop.amount) {pay = prop.amount;}balances[_cp] += pay;ProposerPaid(uint(event_codes.escrow_proposer_paid), tx.origin, _cp, _contract, _amount);var remains = prop.amount - pay;if (hasAmount(tx.origin, pay)) {balances[tx.origin] -= pay;} else {balances[tx.origin] += remains;var device_contract = container_executor(_contract);device_contract.cancel_container(pay);}return true;} else {return false;}}function cancel_escrow(address _proposer, address _cp, address _contract, uint _amount) returns (bool rv) {if (tx.origin != _proposer \u0026\u0026 tx.origin != _cp) return false;var prop = escrow[_proposer].counter_parties[_cp].proposals[_contract];if (tx.origin == _proposer) {if (prop.amount != 0 \u0026\u0026 (prop.proposer_vote == false || prop.counter_party_vote == false)) {balances[_proposer] += prop.amount;CancelProposal(uint(event_codes.escrow_cancelled), _proposer, _cp, _contract);EscrowRefund(uint(event_codes.escrow_refunded), _proposer, _cp, _contract, prop.amount);delete escrow[_proposer].counter_parties[_cp].proposals[_contract];} else {if (prop.amount != 0 \u0026\u0026 _amount \u003e 0) {var pay = _amount;if (_amount \u003e prop.amount) {pay = prop.amount;}balances[_cp] += pay;ProposerPaid(uint(event_codes.escrow_proposer_paid), _proposer, _cp, _contract, pay);CancelProposal(uint(event_codes.escrow_cancelled), _proposer, _cp, _contract);var remains = prop.amount - pay;balances[tx.origin] += remains;EscrowRefund(uint(event_codes.escrow_refunded), _proposer, _cp, _contract, remains);delete escrow[_proposer].counter_parties[_cp].proposals[_contract];} else {return false;}}} else {if (tx.origin == _cp) {prop.cancelled = true;if (prop.amount != 0 \u0026\u0026 (prop.proposer_vote == false || prop.counter_party_vote == false)) {balances[_proposer] += prop.amount;EscrowRefund(uint(event_codes.escrow_refunded), _proposer, _cp, _contract, prop.amount);CancelProposal(uint(event_codes.escrow_cancelled), _proposer, _cp, _contract);delete escrow[_proposer].counter_parties[_cp].proposals[_contract];}}}return true;}function get_escrow_amount(address _proposer, address _cp, address _contract) constant returns (uint rv) {if (tx.origin == _proposer || tx.origin == _cp || tx.origin == minter) {var prop = escrow[_proposer].counter_parties[_cp].proposals[_contract];return prop.amount;} else {return 0;}}function get_counterparty_accepted(address _proposer, address _cp, address _contract) constant returns (bool rv) {var prop = escrow[_proposer].counter_parties[_cp].proposals[_contract];if (prop.amount != 0) {return prop.counter_party_vote;}return false;}function get_proposer_accepted(address _proposer, address _cp, address _contract) constant returns (bool rv) {var prop = escrow[_proposer].counter_parties[_cp].proposals[_contract];if (prop.amount != 0) {return prop.proposer_vote;}return false;}function get_agreement_cancelled(address _proposer, address _cp, address _contract) constant returns (bool rv) {var prop = escrow[_proposer].counter_parties[_cp].proposals[_contract];if (prop.amount != 0) {return prop.cancelled;}return false;}function mint(uint _amount) {authorized_caller sender = authorized_caller(msg.sender);address sender_owner = sender.get_owner();if (tx.origin == minter || sender_owner == minter) {total_currency += _amount;Mint(uint(event_codes.mint), minter, sender_owner, _amount);}}function get_total_currency() constant returns (uint r) {authorized_caller sender = authorized_caller(msg.sender);address sender_owner = sender.get_owner();if (tx.origin == minter || sender_owner == minter) {return total_currency;}return 0;}function get_minter() constant returns (address r) {return minter;}function kill() {if (msg.sender == minter) suicide(minter);}}"},"code":""}